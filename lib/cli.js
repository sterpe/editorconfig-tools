// Generated by CoffeeScript 1.11.1
var ArgumentParser, argparser, argv, check, checkCommand, fix, fixCommand, infer, inferCommand, packageInfo, path, ref, subparsers;

path = require('path');

packageInfo = require(path.join(__dirname, '../package.json'));

ArgumentParser = require('argparse').ArgumentParser;

ref = require('./index'), check = ref.check, fix = ref.fix, infer = ref.infer;

argparser = new ArgumentParser({
  version: packageInfo.version,
  addHelp: true,
  description: packageInfo.description
});

subparsers = argparser.addSubparsers({
  title: 'action',
  dest: 'action'
});

inferCommand = subparsers.addParser('infer', {
  help: 'Infer .editorconfig settings from one or more files',
  addHelp: true
});

inferCommand.addArgument(['files'], {
  type: 'string',
  metavar: 'FILE',
  nargs: '+',
  help: 'The file(s) to use'
});

checkCommand = subparsers.addParser('check', {
  help: 'Validate that file(s) adhere to .editorconfig settings, returning an error code if they don\'t',
  addHelp: true
});

checkCommand.addArgument(['files'], {
  type: 'string',
  metavar: 'FILE',
  nargs: '+',
  help: 'The file(s) to use'
});

fixCommand = subparsers.addParser('fix', {
  help: 'Fix formatting errors that disobey .editorconfig settings',
  addHelp: true
});

fixCommand.addArgument(['files'], {
  type: 'string',
  metavar: 'FILE',
  nargs: '+',
  help: 'The file(s) to use'
});

argv = argparser.parseArgs();

if (argv.action === 'check') {
  check(argv.files);
} else if (argv.action === 'fix') {
  fix(argv.files);
} else if (argv.action === 'infer') {
  infer(argv.files);
}
